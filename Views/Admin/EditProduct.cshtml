@model Product
@{
    ViewData["Title"] = (Model.Id == 0 ? "Thêm sản phẩm" : "Chỉnh sửa sản phẩm");
    Layout = "~/Views/Shared/_Layout_NoSidebar.cshtml";
}

<!-- Toast Notification -->
@if (TempData["Message"] != null)
{
    <div id="toastMessage" class="toast-container position-fixed bottom-0 start-0 p-3" style="z-index: 1055;">
        <div class="toast align-items-center text-white bg-custom-primary border-0 show shadow-lg" role="alert">
            <div class="d-flex">
                <div class="toast-body fw-semibold">
                    <i class="bi bi-exclamation-triangle-fill me-2"></i>
                    @TempData["Message"]
                </div>
                <button type="button" class="btn-close btn-close-white me-2 m-auto"
                        data-bs-dismiss="toast" aria-label="Đóng"></button>
            </div>
        </div>
    </div>
}

<div class="container-fluid py-4">
    <!-- Header Section -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex align-items-center justify-content-between flex-wrap">
                <div class="d-flex align-items-center mb-3 mb-sm-0">
                    <div class="bg-custom-primary bg-gradient rounded-circle d-flex align-items-center justify-content-center me-3"
                         style="width: 60px; height: 60px;">
                        <i class="bi bi-box-seam text-white" style="font-size: 1.5rem;"></i>
                    </div>
                    <div>
                        <h2 class="fw-bold text-custom-primary mb-1">@(Model.Id == 0 ? "Thêm sản phẩm mới" : "Chỉnh sửa sản phẩm")</h2>
                        <p class="text-muted mb-0">@(Model.Id == 0 ? "Thêm thông tin chi tiết cho sản phẩm mới." : "Cập nhật thông tin chi tiết của sản phẩm.")</p>
                    </div>
                </div>
                <div class="text-end">
                    <a asp-action="Product" class="btn btn-outline-custom-primary btn-lg">
                        <i class="bi bi-arrow-left me-2"></i>
                        Quay lại danh sách
                    </a>
                </div>
            </div>
        </div>
    </div>

    <!-- Product Form Card -->
    <div class="row justify-content-center">
        <div class="col-12 col-md-10 col-lg-8">
            <div class="card shadow-sm border-0">
                <div class="card-header bg-light border-0 py-3">
                    <h5 class="card-title mb-0 text-custom-primary">
                        <i class="bi bi-info-circle me-2"></i>
                        Thông tin sản phẩm
                    </h5>
                </div>
                <div class="card-body p-4">
                    <form asp-action="EditProduct" method="post" enctype="multipart/form-data" class="product-edit-form">
                        <input type="hidden" asp-for="Id" />

                        <div class="form-floating mb-4">
                            <input asp-for="Name" class="form-control form-control-custom" placeholder="Tên sản phẩm" required />
                            <label asp-for="Name">
                                <i class="bi bi-tag me-2"></i>
                                Tên sản phẩm
                            </label>
                            <span asp-validation-for="Name" class="text-danger mt-1 d-block"></span>
                        </div>

                        <div class="form-floating mb-4">
                            <div class="input-group">
                                <input id="priceInput" class="form-control form-control-custom" placeholder="Giá sản phẩm" required />
                                <span class="input-group-text input-group-text-custom">VNĐ</span>
                            </div>
                            <label for="priceInput">
                                <i class="bi bi-currency-dollar me-2"></i>
                                Giá sản phẩm
                            </label>
                            <input type="hidden" asp-for="Price" id="Price" />
                            <span asp-validation-for="Price" class="text-danger mt-1 d-block"></span>
                        </div>

                        <div class="form-floating mb-4">
                            <input asp-for="Quantity" class="form-control form-control-custom" type="number" min="0" placeholder="Số lượng" required />
                            <label asp-for="Quantity">
                                <i class="bi bi-123 me-2"></i>
                                Số lượng
                            </label>
                            <span asp-validation-for="Quantity" class="text-danger mt-1 d-block"></span>
                        </div>

                        <div class="form-floating mb-4">
                            <select asp-for="Category" class="form-select form-control-custom" asp-items="@(new SelectList(ViewBag.Categories, "Id", "Name"))" required>
                                <option value="">-- Chọn danh mục --</option>
                            </select>
                            <label asp-for="Category">
                                <i class="bi bi-folder me-2"></i>
                                Danh mục
                            </label>
                            <span asp-validation-for="Category" class="text-danger mt-1 d-block"></span>
                        </div>

                        <div class="mb-4">
                            <label class="form-label fw-semibold text-custom-primary mb-2">
                                <i class="bi bi-image me-2"></i>
                                Ảnh sản phẩm
                            </label>
                            <input type="file" name="ImageFile" class="form-control form-control-custom-file" />
                            @if (!string.IsNullOrEmpty(Model.ImageUrl))
                            {
                                <div class="mt-3 image-preview-container">
                                    <img src="~/uploads/@Model.ImageUrl"
                                         alt="Ảnh sản phẩm hiện tại"
                                         class="img-thumbnail shadow-sm rounded"
                                         style="object-fit: contain;" />
                                    <p class="text-muted mt-2 mb-0">Ảnh hiện tại</p>
                                </div>
                            }
                            else
                            {
                                <p class="text-muted mt-2 mb-0">Chưa có ảnh sản phẩm.</p>
                            }
                        </div>

                        <div class="d-flex justify-content-end gap-2">
                            <button type="submit" class="btn btn-custom-primary btn-lg">
                                <i class="bi bi-save me-2"></i>
                                Lưu thay đổi
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    /* Custom Primary Color Variables */
    :root {
        --custom-primary: #212529;
        --custom-primary-hover: #1a1e21;
        --custom-primary-light: rgba(33, 37, 41, 0.1);
        --custom-primary-shadow: rgba(33, 37, 41, 0.15);
        --gradient-primary: linear-gradient(135deg, #212529 0%, #343a40 100%);
    }

    /* Custom Primary Color Classes */
    .text-custom-primary {
        color: var(--custom-primary) !important;
    }

    .bg-custom-primary {
        background-color: var(--custom-primary) !important;
    }

    .btn-custom-primary {
        background: var(--gradient-primary);
        border: none;
        color: white;
        transition: all 0.3s ease;
        font-weight: 500;
        box-shadow: 0 4px 12px var(--custom-primary-shadow);
    }

        .btn-custom-primary:hover {
            background: linear-gradient(135deg, var(--custom-primary-hover) 0%, #16191d 100%);
            transform: translateY(-2px);
            box-shadow: 0 6px 18px var(--custom-primary-shadow);
            color: white;
        }

    .btn-outline-custom-primary {
        border: 2px solid var(--custom-primary);
        color: var(--custom-primary);
        background: transparent;
        font-weight: 500;
        transition: all 0.3s ease;
    }

        .btn-outline-custom-primary:hover {
            background: var(--custom-primary);
            color: white;
            transform: translateY(-2px);
            box-shadow: 0 4px 12px var(--custom-primary-shadow);
        }

    /* Card Styling */
    .card {
        transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
        border: 1px solid rgba(0,0,0,0.05);
    }

        .card:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.1) !important;
        }

    /* Form Control Custom */
    .form-control-custom {
        border: 2px solid #e9ecef;
        border-radius: 10px;
        padding: 1.25rem 1rem 0.5rem;
        font-size: 0.95rem;
        transition: all 0.3s ease;
        background: #f8f9fa;
    }

        .form-control-custom:focus {
            border-color: var(--custom-primary);
            box-shadow: 0 0 0 0.2rem var(--custom-primary-light);
            background: white;
            outline: none;
        }

    .form-floating label {
        color: #6c757d;
        font-weight: 500;
        padding: 1rem;
        font-size: 0.9rem;
    }

    .form-control-custom:focus ~ label,
    .form-control-custom:not(:placeholder-shown) ~ label,
    .form-control-custom.active ~ label { /* For select elements */
        color: var(--custom-primary);
        transform: scale(0.85) translateY(-0.5rem) translateX(0.15rem);
    }

    /* Input Group Text Custom */
    .input-group-text-custom {
        background-color: #e9ecef;
        border: 2px solid #e9ecef;
        border-left: none;
        border-radius: 0 10px 10px 0;
        color: #6c757d;
        font-weight: 500;
    }

    /* File Input Custom */
    .form-control-custom-file {
        border: 2px solid #e9ecef;
        border-radius: 10px;
        padding: 0.75rem 1rem;
        font-size: 0.95rem;
        transition: all 0.3s ease;
        background: #f8f9fa;
    }

        .form-control-custom-file:focus {
            border-color: var(--custom-primary);
            box-shadow: 0 0 0 0.2rem var(--custom-primary-light);
            background: white;
            outline: none;
        }

    /* Image Preview */
    .image-preview-container img {
        max-width: 200px;
        height: auto;
        border: 2px solid #dee2e6;
        transition: all 0.3s ease;
    }

        .image-preview-container img:hover {
            transform: scale(1.05);
            border-color: var(--custom-primary);
        }

    /* Validation Text */
    .text-danger {
        font-size: 0.85rem;
        color: #dc3545 !important;
    }

    /* Toast Styling */
    .toast.bg-custom-primary {
        background: var(--gradient-primary) !important;
        border-radius: 10px;
    }
</style>

@section Scripts {
    <script>
        const priceInput = document.getElementById("priceInput");
        const hiddenPrice = document.getElementById("Price");

        function formatNumber(number) {
            return number.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ".");
        }

        function unformatNumber(str) {
            return str.replaceAll(".", "");
        }

        priceInput.addEventListener("input", function () {
            const raw = unformatNumber(priceInput.value);
            const numeric = parseInt(raw || "0");
            hiddenPrice.value = numeric;
            priceInput.value = formatNumber(numeric);
        });

        // Gán giá trị ban đầu nếu sửa
        window.addEventListener("DOMContentLoaded", function () {
            const initial = hiddenPrice.value;
            if (initial) {
                priceInput.value = formatNumber(initial);
            }

            // Add 'active' class to form-control-custom for select elements if they have a value
            const selectElements = document.querySelectorAll('.form-control-custom');
            selectElements.forEach(select => {
                if (select.tagName === 'SELECT') {
                    if (select.value !== '') {
                        select.classList.add('active');
                    }
                    select.addEventListener('change', function() {
                        if (this.value !== '') {
                            this.classList.add('active');
                        } else {
                            this.classList.remove('active');
                        }
                    });
                }
            });

            // Toast functionality
            const toastEl = document.querySelector('.toast');
            if (toastEl) {
                const toast = new bootstrap.Toast(toastEl, { delay: 5000 });
                toast.show();
            }
        });
    </script>
}