@model List<Category>
@{
    ViewData["Title"] = "Danh mục sản phẩm";
    Layout = "~/Views/Shared/_Layout_NoSidebar.cshtml";

    // lấy sort hiện tại từ ViewBag (được set ở controller)
    var currentSort = ViewBag.Sort as string ?? "status_desc";
    var nextSort = currentSort == "status_desc" ? "status_asc" : "status_desc";

    // lấy action hiện tại (để dùng lại cho Categories.cshtml nếu bạn dùng 2 view)
    var currentAction = ViewContext.RouteData.Values["action"]?.ToString() ?? "Category";
}

<!-- Toast Notification -->
@if (TempData["Message"] != null)
{
    <div id="toastMessage" class="toast-container position-fixed bottom-0 start-0 p-3" style="z-index: 1055;">
        <div class="toast align-items-center text-white bg-custom-primary border-0 show shadow-lg" role="alert">
            <div class="d-flex">
                <div class="toast-body fw-semibold">
                    <i class="bi bi-exclamation-triangle-fill me-2"></i>
                    @TempData["Message"]
                </div>
                <button type="button" class="btn-close btn-close-white me-2 m-auto"
                        data-bs-dismiss="toast" aria-label="Đóng"></button>
            </div>
        </div>
    </div>
}

<div class="container-fluid py-4">
    <!-- Header Section -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex align-items-center justify-content-between flex-wrap">
                <div class="d-flex align-items-center mb-3 mb-sm-0">
                    <div class="bg-custom-primary bg-gradient rounded-circle d-flex align-items-center justify-content-center me-3"
                         style="width: 60px; height: 60px;">
                        <i class="bi bi-folder-fill text-white" style="font-size: 1.5rem;"></i>
                    </div>
                    <div>
                        <h2 class="fw-bold text-custom-primary mb-1"></h2>
                        <p class="text-muted mb-0">Quản lý các danh mục sản phẩm hiện có.</p>
                    </div>
                </div>
                <div class="text-end">
                    <a class="btn btn-custom-primary btn-lg" href="/Admin/EditCategory/0">
                        <i class="bi bi-plus-circle me-2"></i>
                        Thêm danh mục mới
                    </a>
                </div>
            </div>
        </div>
    </div>

    <!-- Categories Table Card -->
    <div class="card shadow-sm">
        <div class="card-header bg-light d-flex justify-content-between align-items-center">
            <h5 class="mb-0">Danh mục</h5>
        </div>
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-hover align-middle mb-0">
                    <thead class="table-light">
                        <tr>
                            <th style="width:80px;">ID</th>
                            <th>Tên danh mục</th>
                            <th style="width:160px;" class="text-center">
                                <a class="text-decoration-none text-custom-primary d-inline-flex align-items-center"
                                   href="@Url.Action(currentAction, new { sort = nextSort })"
                                   title="Sắp xếp theo trạng thái">
                                    Trạng thái
                                    @if (currentSort == "status_desc")
                                    {
                                        <i class="bi bi-sort-down ms-1"></i>  @* Active ở trên *@
                                    }
                                    else
                                    {
                                        <i class="bi bi-sort-up ms-1"></i>    @* Inactive ở trên *@
                                    }
                                </a>
                            </th>
                            <th style="width:200px;" class="text-end">Thao tác</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model != null && Model.Any())
                        {
                            foreach (var c in Model)
                            {
                                <tr>
                                    <td>@c.Id</td>
                                    <td>@c.Name</td>
                                    <td class="text-center">
                                        @if (c.Active)
                                        {
                                            <span class="badge bg-success-subtle text-success border border-success-subtle">Đang hoạt động</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-secondary-subtle text-secondary border border-secondary-subtle">Ngừng hoạt động</span>
                                        }
                                    </td>
                                    <td class="text-end">
                                        <div class="btn-group">
                                            <a class="btn btn-outline-dark btn-sm" href="@Url.Action("EditCategory","Admin", new { id = c.Id })">
                                                <i class="bi bi-pencil-square me-1"></i> Sửa
                                            </a>
                                            <form method="post" action="@Url.Action("ToggleCategoryStatus","Admin")" class="d-inline">
                                                <input type="hidden" name="id" value="@c.Id" />
                                                <button type="submit" class="btn btn-outline-secondary btn-sm">
                                                    <i class="bi bi-toggle2-on me-1"></i> @(c.Active ? "Tắt" : "Bật")
                                                </button>
                                            </form>
                                            @* ĐÃ BỎ nút XÓA *@
                                        </div>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="4" class="text-center text-muted py-4">Chưa có danh mục nào.</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<style>
    /* Custom Primary Color Variables */
    :root {
        --custom-primary: #212529;
        --custom-primary-hover: #1a1e21;
        --custom-primary-light: rgba(33, 37, 41, 0.1);
        --custom-primary-shadow: rgba(33, 37, 41, 0.15);
        --gradient-primary: linear-gradient(135deg, #212529 0%, #343a40 100%);
    }

    /* Custom Primary Color Classes */
    .text-custom-primary {
        color: var(--custom-primary) !important;
    }

    .bg-custom-primary {
        background-color: var(--custom-primary) !important;
    }

    .btn-custom-primary {
        background: var(--gradient-primary);
        border: none;
        color: white;
        transition: all 0.3s ease;
        font-weight: 500;
        box-shadow: 0 4px 12px var(--custom-primary-shadow);
    }

        .btn-custom-primary:hover {
            background: linear-gradient(135deg, var(--custom-primary-hover) 0%, #16191d 100%);
            transform: translateY(-2px);
            box-shadow: 0 6px 18px var(--custom-primary-shadow);
            color: white;
        }

    .card {
        transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
        border: 1px solid rgba(0,0,0,0.05);
    }

        .card:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.1) !important;
        }

    .table thead th {
        background: #f8f9fa;
        font-weight: 600;
        font-size: 0.9rem;
        color: var(--custom-primary);
        border-bottom: 2px solid var(--custom-primary-light);
    }

    .toast.bg-custom-primary {
        background: var(--gradient-primary) !important;
        border-radius: 10px;
    }
</style>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const toastEl = document.querySelector('.toast');
            if (toastEl) {
                const toast = new bootstrap.Toast(toastEl, { delay: 5000 });
                toast.show();
            }
        });
    </script>
}
