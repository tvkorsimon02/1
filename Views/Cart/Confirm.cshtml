@model Order
@{
    Layout = "~/Views/Shared/_Layout_NoSidebar.cshtml";

}
<!-- Toast Notification -->
@if (TempData["Message"] != null)
{
    <div id="toastMessage" class="toast-container position-fixed top-0 end-0 p-3" style="z-index: 1055;">
        <div class="toast align-items-center text-white bg-custom-primary border-0 show shadow-lg" role="alert">
            <div class="d-flex">
                <div class="toast-body fw-semibold">
                    <i class="bi bi-info-circle-fill me-2"></i>
                    @TempData["Message"]
                </div>
                <button type="button" class="btn-close btn-close-white me-2 m-auto"
                        data-bs-dismiss="toast" aria-label="Đóng"></button>
            </div>
        </div>
    </div>
}

<div class="container-fluid py-4">
    <!-- Header Section -->
    <div class="row mb-5">
        <div class="col-12">
            <div class="d-flex align-items-center justify-content-between flex-wrap">
                <div class="d-flex align-items-center mb-3 mb-sm-0">
                    <div class="bg-custom-primary bg-gradient rounded-circle d-flex align-items-center justify-content-center me-3"
                         style="width: 60px; height: 60px;">
                        <i class="bi bi-check-circle text-white" style="font-size: 1.5rem;"></i>
                    </div>
                    <div>
                        <h2 class="fw-bold text-custom-primary mb-1">Xác nhận đơn hàng</h2>
                        <p class="text-muted mb-0">Đơn hàng của bạn đã được đặt thành công!</p>
                    </div>
                </div>
                <div class="text-end">
                    <div class="badge bg-custom-primary fs-6 px-3 py-2 order-info-badge">
                        <i class="bi bi-hash me-1"></i>
                        Mã đơn: #@Model.Id
                    </div>
                </div>
            </div>
            <div class="text-muted mt-3 ms-auto text-end">
                <small><i class="bi bi-calendar me-1"></i> Ngày đặt: @Model.Created_Date.ToString("dd/MM/yyyy HH:mm")</small>
            </div>
        </div>
    </div>

    <!-- Order Details Card -->
    <div class="row">
        <div class="col-12">
            <div class="card shadow-sm border-0 order-details-card">
                <div class="card-header bg-light border-0 py-3">
                    <h6 class="mb-0 text-custom-primary fw-semibold">
                        <i class="bi bi-list-check me-2"></i>
                        Chi tiết sản phẩm
                    </h6>
                </div>
                <div class="card-body p-0">
                    <div class="table-responsive">
                        <table class="table table-hover align-middle mb-0 order-items-table">
                            <thead class="table-light">
                                <tr>
                                    <th>Sản phẩm</th>
                                    <th class="text-end" style="width: 150px;">Giá</th>
                                    <th class="text-center" style="width: 100px;">Số lượng</th>
                                    <th class="text-end" style="width: 150px;">Thành tiền</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model.OrderDetails != null && Model.OrderDetails.Any())
                                {
                                    @foreach (var d in Model.OrderDetails)
                                    {
                                        <tr>
                                            <td>
                                                <div class="d-flex align-items-center">
                                                    <img src="@(string.IsNullOrEmpty(d.ProductNav?.ImageUrl)
            ? "/placeholder.svg?height=60&width=60"
            : Url.Content("~/uploads/" + d.ProductNav.ImageUrl))"
                                                         alt="@d.ProductNav?.Name"
                                                         class="rounded me-3"
                                                         style="width: 60px; height: 60px; object-fit: cover;" />
                                                    <span class="fw-semibold">@d.ProductNav?.Name</span>

                                                </div>
                                            </td>
                                            <td class="text-end">@string.Format("{0:N0}", d.Price) VNĐ</td>
                                            <td class="text-center">@d.Quantity</td>
                                            <td class="text-end fw-bold text-custom-primary">@string.Format("{0:N0}", d.Quantity * d.Price) VNĐ</td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="4" class="text-center text-muted py-4">
                                            Không có sản phẩm nào trong đơn hàng này.
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="card-footer d-flex justify-content-end py-3 bg-light border-0">
                    <h4 class="mb-0 text-custom-primary fw-bold">
                        Tổng tiền: @string.Format("{0:N0}", Model.OrderDetails.Sum(d => d.Quantity * d.Price)) VNĐ
                    </h4>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    /* Custom Primary Color Variables */
    :root {
        --custom-primary: #212529;
        --custom-primary-hover: #1a1e21;
        --custom-primary-light: rgba(33, 37, 41, 0.1);
        --custom-primary-shadow: rgba(33, 37, 41, 0.15);
        --gradient-primary: linear-gradient(135deg, #212529 0%, #343a40 100%);
    }

    /* Custom Primary Color Classes */
    .text-custom-primary {
        color: var(--custom-primary) !important;
    }

    .bg-custom-primary {
        background-color: var(--custom-primary) !important;
    }

    .badge.bg-custom-primary {
        background-color: var(--custom-primary) !important;
        color: white;
    }

    /* Header Styling */
    .bg-gradient {
        background: var(--gradient-primary) !important;
    }

    /* Card Styling */
    .card {
        transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
        border: 1px solid rgba(0,0,0,0.05);
    }

    .order-details-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 20px rgba(0,0,0,0.1) !important;
    }

    /* Toast Styling */
    .toast.bg-custom-primary {
        background: var(--gradient-primary) !important;
        border-radius: 0.5rem;
    }

    /* Badge Styling */
    .badge {
        font-size: 0.75rem;
        font-weight: 500;
        border-radius: 0.375rem;
        padding: 0.25rem 0.5rem;
    }

    /* Header Badge */
    .order-info-badge {
        font-size: 0.9rem !important;
        padding: 0.5rem 1rem;
        border-radius: 0.5rem;
        background: var(--gradient-primary) !important;
        box-shadow: 0 2px 8px var(--custom-primary-shadow);
    }

    /* Card Headers */
    .card-header {
        border-bottom: 1px solid rgba(0,0,0,0.05);
    }

        .card-header h6 {
            font-size: 0.95rem;
            letter-spacing: 0.025em;
        }

    /* Table Styling */
    .order-items-table thead th {
        font-weight: 600;
        color: var(--custom-primary);
        border-bottom: 2px solid var(--custom-primary-light);
    }

    .order-items-table tbody td {
        padding: 1rem 0.75rem;
        vertical-align: middle;
    }

    .order-items-table tbody tr:last-child td {
        border-bottom: none;
    }
</style>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const toastEl = document.querySelector('.toast');
            if (toastEl) {
                const toast = new bootstrap.Toast(toastEl, {
                    delay: 5000,
                    animation: true
                });
                toast.show();
            }
        });
    </script>
}